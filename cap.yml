caps:
  - name: empty
  - name: memory
    fields:
      - begin 4
      - end 4
      - rwx 1
      - free 4
      - pmp 1
    asserts:
      - 'begin == free'
      - 'begin < end'
      - 'pmp == 0'
      - 'rwx == 0x4 || rwx == 0x5 || rwx == 0x6 || rwx == 0x7'
  - name: pmp
    fields:
      - addr 4
      - rwx 1
    asserts:
      - 'rwx == 0x4 || rwx == 0x5 || rwx == 0x6 || rwx == 0x7'
  - name: time
    fields:
      - hartid 1
      - begin 2
      - end 2
      - free 2
      - depth 1
    asserts:
      - 'MIN_HARTID <= hartid'
      - 'hartid <= MAX_HARTID'
      - 'begin == free'
      - 'begin < end'
      - 'end <= N_QUANTUM'
  - name: channels
    fields:
      - begin 2
      - end 2
      - free 2
    asserts:
      - 'begin == free'
      - 'begin < end'
      - 'end <= N_CHANNELS'
  - name: receiver 
    fields:
      - channel 2
    asserts:
      - 'channel < N_CHANNELS'
  - name: sender 
    fields:
      - channel 2
      - yield 1
    asserts:
      - 'channel < N_CHANNELS'
  - name: supervisor
    fields:
      - begin 1
      - end 1
      - free 1
    asserts:
      - 'begin == free'
      - 'begin < end'
      - 'end <= N_PROC'

is_child:
  - parent: memory
    child: memory  
    relations:
      - 'p:begin <= c:begin'
      - 'c:end <= p:end'
      - '(c:rwx & p:rwx) == c:rwx'
  - parent: memory
    child: pmp
    relations:
      - 'p:begin <= pmp_napot_begin(c:addr)'
      - 'pmp_napot_end(c:addr) <= p:end'
      - '(c:rwx & p:rwx) == c:rwx'
  - parent: time
    child: time
    relations:
      - 'p:begin <= c:begin'
      - 'c:end <= p:end'
      - 'p:hartid == c:hartid'
      - 'p:depth < c:depth'
  - parent: channels
    child: channels
    relations:
      - 'p:begin <= c:begin'
      - 'c:end <= p:end'
  - parent: channels
    child: receiver 
    relations:
      - 'p:begin <= c:channel'
      - 'c:channel < p:end'
  - parent: channels
    child: sender
    relations:
      - 'p:begin <= c:channel'
      - 'c:channel < p:end'
  - parent: receiver 
    child: sender 
    relations:
      - 'p:channel == c:channel'
  - parent: supervisor
    child: supervisor
    relations:
      - 'p:begin <= c:begin'
      - 'c:end <= p:end'

can_derive:
  - parent: memory
    child: memory  
    relations:
      - 'p:pmp == 0'
      - 'c:pmp == 0'
      - 'p:free <= c:begin'
      - 'c:end <= p:end'
      - '(c:rwx & p:rwx) == c:rwx'
      - 'c:free == c:begin'
      - 'c:begin < c:end'
  - parent: memory
    child: pmp
    relations:
      - 'p:free <= pmp_napot_begin(c:addr)'
      - 'pmp_napot_end(c:addr) <= p:end'
      - '(c:rwx & p:rwx) == c:rwx'
  - parent: time
    child: time
    relations:
      - 'p:free <= c:begin'
      - 'c:end <= p:end'
      - 'p:hartid == c:hartid'
      - 'p:depth < c:depth'
      - 'c:free == c:begin'
      - 'c:begin < c:end'
  - parent: channels
    child: channels
    relations:
      - 'p:free <= c:begin'
      - 'c:end <= p:end'
      - 'c:free == c:begin'
      - 'c:begin < c:end'
  - parent: channels
    child: receiver
    relations:
      - 'p:free <= c:channel'
      - 'c:channel < p:end'
  - parent: receiver 
    child: sender
    relations:
      - 'p:channel == c:channel'
      - 'c:yield == 1 || c:yield == 0'
  - parent: supervisor
    child: supervisor
    relations:
      - 'p:free <= c:begin'
      - 'c:end <= p:end'
      - 'c:free == c:begin'
      - 'c:begin < c:end'
